/**
 * EDoc2DocumentWebServiceSoap_PortType.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.webservice;

public interface EDoc2DocumentWebServiceSoap_PortType extends java.rmi.Remote {
    public int removeFileRelation(java.lang.String token, int fileId, int relatedFileId) throws java.rmi.RemoteException;
    public int removeFileRelations(java.lang.String token, int fileId, java.lang.String relatedFileIds) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocRelateFileInfoList getRelatedFiles(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public int createRelattionFile(java.lang.String token, int fileId, int[] relateFileIds) throws java.rmi.RemoteException;
    public int removeFileAttach(java.lang.String token, int fileId, int attachFileId) throws java.rmi.RemoteException;
    public int removeFileAttachs(java.lang.String token, int fileId, java.lang.String attachFileIds) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocAttachFileInfoList getAttachFiles(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public int createAttachFile(java.lang.String token, int fileId, java.lang.String attachFileIds) throws java.rmi.RemoteException;
    public com.webservice.ResultString getFileAbsolutePathByFileId(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultString getFileAbsolutePathByFileVerId(java.lang.String token, int fileVerId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfo getFileInfoByFileId(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfo getFileInfoByFileName(java.lang.String token, int folderId, java.lang.String fileName) throws java.rmi.RemoteException;
    public com.webservice.ResultInt getFileByFileName(java.lang.String token, int folderId, java.lang.String fileName) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfo getFileInfoByFileVerId(java.lang.String token, int fileVerId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfoList getChildFileList(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfoList getChildFileListExpand(java.lang.String token, int folderId, boolean isChild) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfoList getRecycleFileList(java.lang.String token) throws java.rmi.RemoteException;
    public com.webservice.ResultFindFile existsFileByFileId(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultFindFile existsFileByFolder(java.lang.String token, int atFolderId, java.lang.String fileName) throws java.rmi.RemoteException;
    public com.webservice.ResultFindFile existsFileBySubFolders(java.lang.String token, int atFolderId, java.lang.String fileName, boolean searchSubFolders) throws java.rmi.RemoteException;
    public int chanageFileName(java.lang.String token, int fileId, java.lang.String newFileName, java.lang.String newRemark) throws java.rmi.RemoteException;
    public int updateFileCreatorOrModifyOperator(java.lang.String token, int oldUserId, boolean isCreate, int newUserId, int[] fileIds) throws java.rmi.RemoteException;
    public int moveFileList(java.lang.String token, int targetFolderId, boolean dropPerms, int[] fileIds) throws java.rmi.RemoteException;
    public int copyFileList(java.lang.String token, int targetFolderId, boolean copyMeta, boolean copyPerm, int[] fileIds) throws java.rmi.RemoteException;
    public int deleteFileList(java.lang.String token, boolean intoRecycleBin, int[] fileIds) throws java.rmi.RemoteException;
    public int deleteFileListImpl(java.lang.String token, boolean intoRecycleBin, java.lang.String fileIds) throws java.rmi.RemoteException;
    public int internalSend(java.lang.String token, int entryType, int entryId, java.lang.String message, java.lang.String userInfo) throws java.rmi.RemoteException;
    public int clearFileList(java.lang.String token, int[] fileIds) throws java.rmi.RemoteException;
    public com.webservice.ResultInt restoreFileList(java.lang.String token, int[] fileIds) throws java.rmi.RemoteException;
    public int publishFileMainVersion(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public int checkOutFileVersion(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public int checkInFile(java.lang.String token, int fileId, java.lang.String remark) throws java.rmi.RemoteException;
    public int checkInAndPublishVersion(java.lang.String token, int fileId, java.lang.String remark) throws java.rmi.RemoteException;
    public int checkInAndOverlayPrevVersion(java.lang.String token, int fileId, java.lang.String remark) throws java.rmi.RemoteException;
    public com.webservice.ResultOutgoing createFilePublish(java.lang.String token, java.lang.String entryIds, java.util.Calendar endTime, java.lang.String pwd, boolean isPwd, boolean isDown) throws java.rmi.RemoteException;
    public int publishFileVersion(java.lang.String token, int fileId, int taskStarterId) throws java.rmi.RemoteException;
    public int updateWfFileInfo(java.lang.String token, int fileId, int fileState, java.lang.String incId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileInfoList getAllOwnerCreateFiles(java.lang.String token, int pageNum, int pageSize, java.lang.String sortField, boolean sortDesc) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFileVer getFileVerListByFileId(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultInt addFileComment(java.lang.String token, int fileId, java.lang.String content, boolean anonymous) throws java.rmi.RemoteException;
    public com.webservice.ResultInt addFileCommentReply(java.lang.String token, int fileId, java.lang.String content, int commentParentId, boolean anonymous) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderInfo getFolderInfoByFolderId(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderInfo getFolderInfoByFileId(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderInfoList getChildFolderInfoListByFolderId(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSearchListInfo getChildListByFolderId(java.lang.String token, int folderId, int pageNum, int pageSize) throws java.rmi.RemoteException;
    public com.webservice.ResultBool existsFolder(java.lang.String token, int folderParentId, java.lang.String folderName) throws java.rmi.RemoteException;
    public com.webservice.ResultInt createFolder(java.lang.String token, int parentFolderId, java.lang.String folderName, java.lang.String folderCode, long folderMaxSize, long fileMaxSize, long alertSize, java.lang.String remark, java.lang.String forbiddenExts, int securityLevelId, java.util.Calendar createTime, java.util.Calendar modifyTime, java.lang.String creatorLoginName, java.lang.String modiforLoginName) throws java.rmi.RemoteException;
    public int changeFolderName(java.lang.String token, int folderId, java.lang.String newName) throws java.rmi.RemoteException;
    public int updateFolder(java.lang.String token, int folderId, java.lang.String folderName, java.lang.String folderCode, java.lang.String remark, long fileMaxSize, long folderMaxSize, long folderAlertSize, java.lang.String forbiddenExts, int sortOrder, int secunityLevelId) throws java.rmi.RemoteException;
    public int moveFolderList(java.lang.String token, int targetFolderId, boolean dropPerms, int[] folderIds) throws java.rmi.RemoteException;
    public int copyFolderList(java.lang.String token, int targetFolderId, boolean copyMeta, boolean copyPerm, int[] folderIds) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderInfoList getTopPublicFolderList(java.lang.String token) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderInfoList getTopPersonalFolderList(java.lang.String token) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderInfoList getRecycleFolderList(java.lang.String token) throws java.rmi.RemoteException;
    public int deleteFolderList(java.lang.String token, boolean intoRecycleBin, int[] folderIds) throws java.rmi.RemoteException;
    public int deleteFolderListImpl(java.lang.String token, boolean intoRecycleBin, java.lang.String folderIds) throws java.rmi.RemoteException;
    public int clearFolderList(java.lang.String token, int[] folderIds) throws java.rmi.RemoteException;
    public com.webservice.ResultInt restoreFolderList(java.lang.String token, int[] folderIds) throws java.rmi.RemoteException;
    public int setFolderSecurityStrategy(java.lang.String token, int folderId, com.webservice.FolderSecurityStrategy strategy) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocFolderSecurityStrategy getFolderSecurityStrategy(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public com.webservice.ResultEdocFolderSizeChild getFolderSizeChildCount(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public int deleteFolderListAndFileList(java.lang.String token, int[] folderIds, int[] fileIds, boolean intoRecycleBin) throws java.rmi.RemoteException;
    public int copyFolderListAndFileList(java.lang.String token, int[] folderIds, int[] fileIds, int targetFolderId, boolean copyMeta, boolean copyPerm, boolean copyCustEvents) throws java.rmi.RemoteException;
    public int copyFolderListAndFileListImpl(java.lang.String token, java.lang.String folderIds, java.lang.String fileIds, int targetFolderId, boolean copyMeta, boolean copyPerm) throws java.rmi.RemoteException;
    public int copyFolderAndFileList(java.lang.String token, int[] folderIds, int[] fileIds, int targetFolderId, boolean copyMeta, boolean copyPerm, boolean checkIsoFile) throws java.rmi.RemoteException;
    public int moveFolderListAndFileList(java.lang.String token, int[] folderIds, int[] fileIds, int targetFolderId, boolean dropPerms) throws java.rmi.RemoteException;
    public int moveFolderAndFileList(java.lang.String token, int[] folderIds, int[] fileIds, int targetFolderId, boolean dropPerms, boolean checkIsoFile) throws java.rmi.RemoteException;
    public int moveFolderListAndFileListImpl(java.lang.String token, java.lang.String folderIds, java.lang.String fileIds, int targetFolderId, boolean dropPerms) throws java.rmi.RemoteException;
    public com.webservice.ResultInt restoreFolderListAndFileList(java.lang.String token, int[] folderIds, int[] fileIds) throws java.rmi.RemoteException;
    public int clear(java.lang.String token, int[] folderIds, int[] fileIds) throws java.rmi.RemoteException;
    public int clearAll(java.lang.String token) throws java.rmi.RemoteException;
    public int sendDownloadMessage(java.lang.String token, int objectId, boolean isFolderObj, java.lang.String ipAddress) throws java.rmi.RemoteException;
    public int sendFileVersionDownloadMessage(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocPermissionEntryList readFilePermission(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocPermissionEntryList readFolderPermission(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public int setFolderCurrentPermission(java.lang.String token, int folderId, boolean recursive, boolean isMerge, int memberId, int memberType, int[] basicPermValues) throws java.rmi.RemoteException;
    public int setFolderPermissionByCategory(java.lang.String token, int folderId, boolean recursive, boolean isMerge, int memberId, int memberType, java.lang.String languageCode, java.lang.String categoryName) throws java.rmi.RemoteException;
    public int setFolderPermissionAndExpiredTime(java.lang.String token, int folderId, boolean recursive, boolean isMerge, int memberId, int memberType, int[] basicPermissionValues, int[] basicPermFoldersValues, int[] basicPermFilesValues, int[] basicPermFileVersValues, java.util.Calendar startTime, java.util.Calendar expiredTime) throws java.rmi.RemoteException;
    public int setFolderPermission(java.lang.String token, int folderId, boolean recursive, boolean isMerge, int memberId, int memberType, int[] basicPermissionValues, int[] basicPermFoldersValues, int[] basicPermFilesValues, int[] basicPermFileVersValues) throws java.rmi.RemoteException;
    public int setFolderPermissionAndAttachsPerm(java.lang.String token, int folderId, boolean recursive, boolean isMerge, int memberId, int memberType, int[] basicPermissionValues, int[] basicPermFoldersValues, int[] basicPermFilesValues, int[] basicPermFileVersValues, int[] basicPermFileAttachsValues) throws java.rmi.RemoteException;
    public int setFolderPermissionEntryList(java.lang.String token, int folderId, boolean recursive, boolean isMerge, com.webservice.EDocPermissionEntry[] permList) throws java.rmi.RemoteException;
    public int deleteFoldersPermission(java.lang.String token, int[] folderIds, int memberId, int memberType) throws java.rmi.RemoteException;
    public int deleteFolderPermission(java.lang.String token, int folderId, boolean recursive, boolean isRemove, int memberId, int memberType, int[] basicPermissionValues, int[] basicPermFoldersValues, int[] basicPermFilesValues, int[] basicPermFileVersValues) throws java.rmi.RemoteException;
    public int deleteFolderPermissionEntryList(java.lang.String token, int folderId, boolean recursive, boolean isRemove, com.webservice.EDocPermissionEntry[] permList) throws java.rmi.RemoteException;
    public int setFilePermissionByCategory(java.lang.String token, int fileId, boolean isMerge, int memberId, int memberType, java.lang.String languageCode, java.lang.String categoryName) throws java.rmi.RemoteException;
    public int setFilePermission(java.lang.String token, int fileId, boolean isMerge, int memberId, int memberType, int[] basicPermFilesValues, int[] basicPermFileVersValues) throws java.rmi.RemoteException;
    public int setFilePermissionAndAttachsPerm(java.lang.String token, int fileId, boolean isMerge, int memberId, int memberType, int[] basicPermFilesValues, int[] basicPermFileVersValues, int[] basicPermFileAttachsValues) throws java.rmi.RemoteException;
    public int setFilePermissionAndExpiredTime(java.lang.String token, int fileId, boolean isMerge, int memberId, int memberType, int[] basicPermFilesValues, int[] basicPermFileVersValues, java.util.Calendar startTime, java.util.Calendar expiredTime) throws java.rmi.RemoteException;
    public int setFilePermissionEntryList(java.lang.String token, int fileId, boolean isMerge, com.webservice.EDocPermissionEntry[] permList) throws java.rmi.RemoteException;
    public int deleteFilesPermission(java.lang.String token, int[] fileIds, int memberId, int memberType) throws java.rmi.RemoteException;
    public int deleteFilePermission(java.lang.String token, int fileId, boolean isRemove, int memberId, int memberType, int[] basicPermFilesValues, int[] basicPermFileVersValues) throws java.rmi.RemoteException;
    public int deleteFilePermissionEntryList(java.lang.String token, int fileId, boolean isRemove, com.webservice.EDocPermissionEntry[] permList) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocPermissionEntry getPermEntryInfoByUserId(java.lang.String token, int folderId, int userId) throws java.rmi.RemoteException;
    public com.webservice.ResultInt getFolderUserPermission(java.lang.String token, int folderId, int userId) throws java.rmi.RemoteException;
    public com.webservice.ResultInt getFileUserPermission(java.lang.String token, int fileId, int userId) throws java.rmi.RemoteException;
    public com.webservice.ResultBool isEncrypt(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocMessageInfoList getMessageByUserId(java.lang.String token, int userId, com.webservice.MessagesWhereInfo whereInfo) throws java.rmi.RemoteException;
    public int saveMessage(java.lang.String token, com.webservice.EDocMessageInfo msgInfo) throws java.rmi.RemoteException;
    public int sendInstationMessage(java.lang.String token, java.lang.String msgTitle, int msgInceptManType, boolean msgIsUrgent, java.lang.String msgContent, com.webservice.MessageMemberInfo[] msgInceptManList, int[] attachFileIds) throws java.rmi.RemoteException;
    public int sendSysMailMessage(java.lang.String token, java.lang.String strRecipientsAddress, java.lang.String strSubject, java.lang.String emailAddressCc, java.lang.String emailAddressBcc, boolean isBodyHtml, java.lang.String mailContent) throws java.rmi.RemoteException;
    public int sendSysMailMessageAndAttach(java.lang.String token, java.lang.String strRecipientsAddress, java.lang.String strSubject, java.lang.String emailAddressCc, java.lang.String attachFileIds, boolean isBodyHtml, java.lang.String mailContent) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSearchListInfo easyDocSearch(java.lang.String token, java.lang.String type, java.lang.String folderId, java.lang.String searchStr, java.lang.String argsXml) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSearchListInfo docSearch(java.lang.String token, java.lang.String type, java.lang.String folderId, java.lang.String searchStr, java.lang.String argsXml, int startNum, int pageSize) throws java.rmi.RemoteException;
    public int assignFileCreatorOrModifyOperator(java.lang.String token, int[] fileIds, int newUserId, int oldUserId, boolean isCreate, java.util.Calendar startTime, java.util.Calendar endTime, boolean isFullAssign, boolean isAssignAllQueryData) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocShareListInfo getAllShareEntry(java.lang.String token, int pageIndex, int pageSize) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocShareListInfo getAllShareEntryPagingByUserId(java.lang.String token, int userId, int pageIndex, int pageSize) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocShareListInfo getMySharePagingEntry(java.lang.String token, int pageIndex, int pageSize) throws java.rmi.RemoteException;
    public int cancelShare(java.lang.String token, int shareId) throws java.rmi.RemoteException;
    public com.webservice.ResultInt addShare(java.lang.String token, java.lang.String message, com.webservice.EDoc2Share eDoc2Share) throws java.rmi.RemoteException;
    public int changeShare(java.lang.String token, java.lang.String message, com.webservice.EDoc2Share eDoc2Share) throws java.rmi.RemoteException;
    public int insertDocInc(java.lang.String token, java.lang.String incId, int objId, int objType, int processType, java.lang.String remark) throws java.rmi.RemoteException;
    public com.webservice.ResultInt getAttachRootId(java.lang.String token) throws java.rmi.RemoteException;
    public com.webservice.EdocSearchResultInfoList searchFile(java.lang.String token, com.webservice.EDocSearchFileWhereInfo fileWhereInfo) throws java.rmi.RemoteException;
    public com.webservice.EdocSearchResultInfoList searchFolder(java.lang.String token, com.webservice.EDocSearchFolderWhereInfo folderWhereInfo) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSearchListInfo searchDocByMeta(java.lang.String token, java.lang.String objType, int startNum, int pageSize, java.lang.String argsXml, com.webservice.EdocMetaAttrSearchWhereInfo[] metaAttrSearchWhereInfos) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSearchListInfo searchDocByMetaImpl(java.lang.String token, java.lang.String objType, int startNum, int pageSize, java.lang.String argsXml, java.lang.String searchXml) throws java.rmi.RemoteException;
    public com.webservice.ResultInt createShortcut(java.lang.String token, int parentId, java.lang.String name, int objId, int objType, java.lang.String config) throws java.rmi.RemoteException;
    public com.webservice.ResultString createMultiShortcut(java.lang.String token, java.lang.String strFolderId, java.lang.String strEntryId, java.lang.String name, java.lang.String strEntryType, java.lang.String config, java.lang.String other) throws java.rmi.RemoteException;
    public int setMessageForReaded(java.lang.String token, int inceptMsgId) throws java.rmi.RemoteException;
    public void getUserInceptUnReadMessageCount(java.lang.String token, javax.xml.rpc.holders.IntHolder getUserInceptUnReadMessageCountResult, javax.xml.rpc.holders.IntHolder unReadMsgCount) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocInceptMessageInfoList getEasyUserInceptMessageList(java.lang.String token, int pageSize, int pageNum) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocInceptMessageInfoList getUserInceptMessageList(java.lang.String token, int pageSize, int pageNum, java.lang.String userIds, java.lang.String title, java.util.Calendar startTime, java.util.Calendar endTime) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocLogOperationInfoList getLogOperationByCondition(java.lang.String token, int userId, java.lang.String userRealName, java.lang.String optType, java.util.Calendar optTimeStart, java.util.Calendar optTimeEnd, int pageNum, int pageSize, int destId, java.lang.String destName, int optId, int sourceId, java.lang.String sourceName, int optSourceParentId, java.lang.String optSourceParentName) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSignInLogInfoList getAllSignInLogList(java.lang.String token, com.webservice.SignInLogSearchInfo signInLog) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocMapNodeEntityList getMapChildNodes(java.lang.String token, int mnParentId, int mnPermission) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocMapNodeEntityList getMapNodeByCurrentUser(java.lang.String token) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocMapNodeEntity getMapTopNode(java.lang.String token) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocMapNodeEntity getMapNodeById(java.lang.String token, int mnId) throws java.rmi.RemoteException;
    public com.webservice.ResultString getMapNodePathById(java.lang.String token, int mnId) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocSearchListInfo docSearchByMapNodeId(java.lang.String token, int mapNodeId, int startNum, int pageSize) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocInstanceConfigInfo getInstanceConfig(java.lang.String token) throws java.rmi.RemoteException;
    public int setInstanceConfig(java.lang.String token, com.webservice.EDocInstanceConfigInfo configuration) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocCreateSmartSecFilePublish createSmartSecFilePublish(java.lang.String token, com.webservice.CreateSmartSecFilePublishInfo info) throws java.rmi.RemoteException;
    public com.webservice.ResultEDocCreateSmartSecFilePublish getPublishPercent(java.lang.String token, java.lang.String taskId) throws java.rmi.RemoteException;
    public com.webservice.ResultMsg getFIdByPath(java.lang.String token, java.lang.String path) throws java.rmi.RemoteException;
    public com.webservice.ResultString createFolderByPath(java.lang.String token, java.lang.String path) throws java.rmi.RemoteException;
    public com.webservice.ResultString getFileVerIdsByFileId(java.lang.String token, int fileId) throws java.rmi.RemoteException;
    public com.webservice.ResultInt setFoldersFilesPermission(java.lang.String token, int[] folderIds, int[] fileIds, int memberType, int[] memberIds, boolean recursive, boolean isMerge, int[] basicPermissionValues, int[] basicPermFoldersValues, int[] basicPermFilesValues, int[] basicPermFileVersValues, java.util.Calendar startTime, java.util.Calendar expiredTime) throws java.rmi.RemoteException;
    public com.webservice.ResultInt getPermCateIdByName(java.lang.String token, int objType, java.lang.String permCateName) throws java.rmi.RemoteException;
    public int setFilePermissionByCateId(java.lang.String token, int fileId, int cateId, int memberType, int memberId) throws java.rmi.RemoteException;
    public int setFolderPermissionByCateId(java.lang.String token, int folderId, int cateId, int memberType, int memberId) throws java.rmi.RemoteException;
    public int setMultiFilePermMultiMemberByCateId(java.lang.String token, int cateId, int[] fileIds, int memberType, int[] memberIds) throws java.rmi.RemoteException;
    public int setMultiFolderPermMultiMemberByCateId(java.lang.String token, int cateId, int[] folderIds, int memberType, int[] memberIds) throws java.rmi.RemoteException;
    public int deleteFilePermissionByMember(java.lang.String token, int fileId, int memberType, int memberId) throws java.rmi.RemoteException;
    public int deleteFolderPermissionByMember(java.lang.String token, int folderId, int memberType, int memberId) throws java.rmi.RemoteException;
    public int deleteMultiFilePermMultiMemberByMember(java.lang.String token, int[] fileIds, int memberType, int[] memberIds) throws java.rmi.RemoteException;
    public int deleteMultiFolderPermMultiMemberByMember(java.lang.String token, int[] folderIds, int memberType, int[] memberIds) throws java.rmi.RemoteException;
    public boolean checkFileOperPerm(java.lang.String token, int fileId, int permVal) throws java.rmi.RemoteException;
    public boolean checkFileVerOperPerm(java.lang.String token, int fileId, int permVal) throws java.rmi.RemoteException;
    public boolean checkFolderOperPerm(java.lang.String token, int folderId, int permVal) throws java.rmi.RemoteException;
    public com.webservice.ResultMsg folderAndFileSyncForBig(java.lang.String token, int folderId, int objData) throws java.rmi.RemoteException;
    public int updateFileAttrInfo(java.lang.String token, int fileId, java.lang.String fileName, java.lang.String fileCode, java.lang.String effectiveTime, java.lang.String expirationTime, java.lang.String remark, java.lang.String fileTag) throws java.rmi.RemoteException;
    public com.webservice.ResultMsg folderAndFileSync(java.lang.String token, int folderId) throws java.rmi.RemoteException;
    public com.webservice.ResultInt clearPermCacheSdk(java.lang.String token) throws java.rmi.RemoteException;
    public int updateFileInfo(java.lang.String applicant, int fromFileId, int toFileId, java.lang.String strategy, java.lang.String fileName, java.lang.String fileCode, java.lang.String effectiveTime, java.lang.String expirationTime, int securityLevelId, java.lang.String remark, java.lang.String fileTag) throws java.rmi.RemoteException;
    public int updateFileInfoImpl(java.lang.String token, int fileId, java.lang.String fileName, java.lang.String fileCode, java.lang.String remark) throws java.rmi.RemoteException;
    public com.webservice.ResultInt setFileVerNum(java.lang.String token, int fileId, int verNum) throws java.rmi.RemoteException;
}
